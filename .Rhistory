group_by(學系,學屆) %>%
mutate(
學屆PR = percent_rank(學屆平均成績)
)
semesterNumber <- function(xx){
xx %>% as.factor -> xx
levels(xx) <- 1:length(levels(xx))
as.integer(xx)
}
transcriptData %>%
mutate(
學年學期 = str_c(學年,'-',學期)
) %>%
group_by(學號)%>%
mutate(
第幾學期 = semesterNumber(學年學期)
) -> transcriptDataWithSemesterCounts
transcriptDataWithSemesterCounts %>%
group_by(學號)%>%
filter(max(第幾學期) >= 8) -> subsample1
subsample1 %>%
filter(第幾學期 %>% between(1,8)) -> filteredTranscriptData
filteredTranscriptData%>%
group_by(學號,學系,學屆) %>%
summarise(
學屆平均成績 = sum(學期成績*學分數) / sum(學分數),
) -> grade4Years
grade4Years %>%
group_by(學系,學屆) %>%
mutate(
學屆PR = percent_rank(學屆平均成績)*100
) -> grade4Years
semesterNumber <- function(xx){
xx %>% as.factor -> xx
levels(xx) <- 1:length(levels(xx))
as.integer(xx)
}
transcriptData %>%
mutate(
學年學期 = str_c(學年,'-',學期)
) %>%
group_by(學號)%>%
mutate(
第幾學期 = semesterNumber(學年學期)
) -> transcriptDataWithSemesterCounts
transcriptDataWithSemesterCounts %>%
group_by(學號)%>%
filter(max(第幾學期) >= 8) -> subsample1
subsample1 %>%
filter(第幾學期 %>% between(1,8)) -> filteredTranscriptData
filteredTranscriptData%>%
group_by(學號,學系,學屆) %>%
summarise(
學屆平均成績 = sum(學期成績*學分數) / sum(學分數),
) -> grade4Years
grade4Years %>%
group_by(學系,學屆) %>%
mutate(
學屆PR = percent_rank(學屆平均成績)*100
) -> grade4Years
grade4Years
View(transcriptData)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
#subsample <- transcriptData[(transcriptData$學號 == "92a7O5fee"),]
#subsample %>%
# group_by(學號,學年)%>%
#summarise(
# 學年平均成績 = sum(學期成績) / n()
#)
transcriptData %>%
group_by(學號,學年)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[2],
學年平均成績 = sum(學期成績*學分數) / sum(學分數)
) ->gradeEachYear
gradeEachYear
#subsample <- transcriptData[(transcriptData$學號 == "92a7O5fee"),]
#subsample %>%
# group_by(學號,學年)%>%
#summarise(
# 學年平均成績 = sum(學期成績) / n()
#)
transcriptData %>%
group_by(學號,學年)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[2],
學年平均成績 = sum(學期成績*學分數) / sum(學分數)
)%>% ungroup ->gradeEachYear
gradeEachYear
#subsample <- transcriptData[(transcriptData$學號 == "92a7O5fee"),]
#subsample %>%
# group_by(學號,學年)%>%
#summarise(
# 學年平均成績 = sum(學期成績) / n()
#)
transcriptData %>%
group_by(學號,學年)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[2],
學年平均成績 = sum(學期成績*學分數) / sum(學分數)
)%>% ungroup ->gradeEachYear
gradeEachYear
transcriptData$學系[1]
transcriptData$學系[1]
#subsample <- transcriptData[(transcriptData$學號 == "92a7O5fee"),]
#subsample %>%
# group_by(學號,學年)%>%
#summarise(
# 學年平均成績 = sum(學期成績) / n()
#)
transcriptData %>%
group_by(學號,學年)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[1],
學年平均成績 = sum(學期成績*學分數) / sum(學分數)
)%>% ungroup ->gradeEachYear
gradeEachYear
gradeEachYear %>%
group_by(學屆,學系,學年)%>%
mutate(
學年PR =percent_rank(學年平均成績)*100
)
semesterNumber <- function(xx){
xx %>% as.factor -> xx
levels(xx) <- 1:length(levels(xx))
as.integer(xx)
}
transcriptData %>%
mutate(
學年學期 = str_c(學年,'-',學期)
) %>%
group_by(學號)%>%
mutate(
第幾學期 = semesterNumber(學年學期)
) -> transcriptDataWithSemesterCounts#每個學期是第幾學期
transcriptDataWithSemesterCounts %>%
group_by(學號)%>%
mutate(
最大學期 = max(第幾學期))%>%
ungroup%>%
filter(最大學期 >= 8,第幾學期 <= 8)->filteredTranscriptData
filteredTranscriptData %>%
group_by(學號) %>%
summarise(
學系 = 學系[1],
學屆 = 學屆[1],
學屆平均成績 = sum(學期成績*學分數) / sum(學分數)
)%>% ungroup -> grade4Years
grade4Years %>%
group_by(學系,學屆) %>%
mutate(
學屆PR = percent_rank(學屆平均成績)*100
) -> grade4Years
grade4Years
knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(stringr); library(lubridate); library(purrr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptFinal2.csv",col_types = cols(學期成績 = col_double()))
transcriptData$學號 %>% as.factor %>% unique -> numOfStudent
length(numOfStudent)
#subsample <- transcriptData[(transcriptData$學號 == "92a7O5fee"),]
#subsample %>%
# group_by(學號,學年)%>%
#summarise(
# 學年平均成績 = sum(學期成績) / n()
#)
transcriptData %>%
group_by(學號,學年)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[1],
學年平均成績 = sum(學期成績*學分數) / sum(學分數)
)%>% ungroup ->gradeEachYear
gradeEachYear
gradeEachYear %>%
group_by(學系,學屆)%>%
mutate(
學年PR =percent_rank(學年平均成績)*100
)
gradeEachYear %>%
group_by(學屆,學系,學年)%>%
mutate(
學年PR =percent_rank(學年平均成績)*100
)%>% ungroup -> gradeEachYear
semesterNumber <- function(xx){
xx %>% as.factor -> xx
levels(xx) <- 1:length(levels(xx))
as.integer(xx)
}
transcriptData %>%
mutate(
學年學期 = str_c(學年,'-',學期)
) %>%
group_by(學號)%>%
mutate(
第幾學期 = semesterNumber(學年學期)
) -> transcriptDataWithSemesterCounts#每個學期是第幾學期
transcriptDataWithSemesterCounts %>%
group_by(學號)%>%
mutate(
最大學期 = max(第幾學期))%>%
ungroup%>%
filter(最大學期 >= 8,第幾學期 <= 8)->filteredTranscriptData
filteredTranscriptData %>%
group_by(學號) %>%
summarise(
學系 = 學系[1],
學屆 = 學屆[1],
學屆平均成績 = sum(學期成績*學分數) / sum(學分數)
)%>% ungroup -> grade4Years
grade4Years %>%
group_by(學系,學屆) %>%
mutate(
學屆PR = percent_rank(學屆平均成績)*100
) -> grade4Years
grade4Years
View(filteredTranscriptData)
filteredTranscriptData %>%
filter(`必選修類別（必∕選∕通）`!="通" )%>%
group_by(學號)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[1],
學屆平均成績不含通識=sum(學期成績*學分數)/sum(學分數)
)%>% ungroup -> grade4YearsNoGE
grade4YearsNoGE %>%
group_by(學系,學屆)%>%
mutate(
學屆PR不含通識 = percent_rank(學屆平均成績不含通識)*100
) -> grade4YearsNoGE
grade4Years %>%
left_join(
grade4YearsNoGE,
by = c('學號','學系','學屆')
) -> grade4Years
grade4Years
filteredTranscriptData %>%
filter(`必選修類別（必∕選∕通）`!="通" )%>%
group_by(學號)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[1],
學屆平均成績不含通識=sum(學期成績*學分數)/sum(學分數)
)%>% ungroup -> grade4YearsNoGE
grade4YearsNoGE %>%
group_by(學系,學屆)%>%
mutate(
學屆PR不含通識 = percent_rank(學屆平均成績不含通識)*100
) -> grade4YearsNoGE
grade4Years %>%
left_join(
grade4YearsNoGE,
by = c('學號','學系','學屆')
) -> grade4Years
grade4YearsNoGE
filteredTranscriptData %>%
filter(`必選修類別（必∕選∕通）`!="通" )%>%
group_by(學號)%>%
summarise(
學系 = 學系[1],
學屆 = 學屆[1],
學屆平均成績不含通識=sum(學期成績*學分數)/sum(學分數)
)%>% ungroup -> grade4YearsNoGE
grade4YearsNoGE %>%
group_by(學系,學屆)%>%
mutate(
學屆PR不含通識 = percent_rank(學屆平均成績不含通識)*100
) -> grade4YearsNoGE
grade4Years %>%
left_join(
grade4YearsNoGE,
by = c('學號','學系','學屆')
) -> grade4Years
grade4Years
grade4Years %>%
mutate(
PR差異abs=abs(學屆PR-學屆PR不含通識)
)
grade4Years %>%
mutate(
PR差異abs=abs(學屆PR-學屆PR不含通識)
)%>%
group_by(學系)%>%
summarise(
PR差異中位數 = median(PR差異abs)
) -> PRdiffEachDepartment
PRdiffEachDepartment
grade4Years %>%
mutate(
PR差異abs=abs(學屆PR-學屆PR不含通識)
)%>%
group_by(學系)%>%
summarise(
PR差異中位數 = median(PR差異abs)
)%>% ungroup -> PRdiffEachDepartment
PRdiffEachDepartment
grade4Years %>%
mutate(
PR差異abs=abs(學屆PR-學屆PR不含通識)
)%>%
group_by(學系)%>%
summarise(
PR差異中位數 = median(PR差異abs)
) -> PRdiffEachDepartment
PRdiffEachDepartment
library(stringr)
colnames(exData1) -> a
library(readr)
gsHW2ws <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/gsHW2ws.csv")
#sum((gsHW2ws$ans1 == 1), na.rm=TRUE)
mean((gsHW2ws$ans1 == 1), na.rm=TRUE) -> rate
rate
#gsHW2ws[,c(1:6)] -> aa
library(stringr)
ansnames <- str_which(names(gsHW2ws),"ans")
library(dplyr)
#gsHW2ws %>%
#select(ans1,ans21,ans22,ans23,ans24) -> gsHW2wsans
colMeans(gsHW2ws[,ansnames], na.rm = TRUE) -> rate01
rate01
gsHW2ws$答對率 <- rowMeans(gsHW2ws[,ansnames], na.rm=FALSE)
library(dplyr)
#gsHW2ws %>%
#mutate(答對率 = as.numeric(答對率),
#成績 = 5 + 答對率*5,
#) -> gsHW2ws
gsHW2ws$成績 <- 5+gsHW2ws$答對率*5
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
colMeans(sample4corrects,na.rm = TRUE)->aa #算每題平均正確率
minLocation <- which(aa == min(aa))
min1<-names(aa)[minLocation]
aa<-aa[-minLocation] # - 號 排除最低正確率
minLocation <- which(aa == min(aa)) #找出第二低
min2<-names(aa)[minLocation]
commonMistakes<-c(min1, min2)
commonMistakes
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
colMeans(sample3correct,na.rm = TRUE) -> bb
lowcorrect <- which(bb < 0.5)
names(bb)[lowcorrect]
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
library(readr)
allBankData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/allBankData.csv")
library(lubridate)
library(stringr)
allBankData$年月 <- as.factor(allBankData$年月)
allBankData$年月 <- str_c("0",allBankData$年月,"/01")
ymd(allBankData$年月) + years(1911) -> allBankData$年月
as.factor(allBankData$銀行)->allBankData$銀行
as.numeric(allBankData$`定存利率-三個月-固定`) -> allBankData$`定存利率-三個月-固定`
as.numeric(allBankData$`定存利率-一年期-固定`) -> allBankData$`定存利率-一年期-固定`
library(readr)
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
library(dplyr)
exData %>%
mutate_at(
vars(contains("/")
),
funs(parse_number(.,na=c("","NA","-")
)))%>%
mutate(期間 = str_c(期間,"-01"),期間=ymd(期間)) -> exData
#mutate_at(exData,c(2:19),as.numeric) -> exData
#exData
library(dplyr)
library(tidyselect)
exData %>%
mutate_at(vars(contains("USD/")),
funs(1/.)) -> exData1
exData1
#reverse <- function(x){
#y <- 1/x
#return(y)
#}
#mutate_at(exData,c(4,10,15),reverse) -> exData
#exData
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
currencynames %>% str_locate("/") %>%
str_sub(currencynames,1,[,1]-4) ->
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
currencynames
#currencynames %>% str_locate("/") %>%
#str_sub(currencynames,1,[,1]-4) ->
#currencyName
#str_locate_all(a,"/")
#str_sub(a,1,2) -> b
#colnames(exData)[c(4,10,15)] <- b
#exData
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
currencynames
a
#currencynames %>% str_locate("/") %>%
#str_sub(currencynames,1,[,1]-4) ->
#currencyName
#str_locate_all(a,"/")
#str_sub(a,1,2) -> b
#colnames(exData)[c(4,10,15)] <- b
#exData
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
str_sub(currencyName,1,.[,1]-4)
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
str_sub(currencyname,1,.[,1]-4)
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
str_sub(currencynames,1,.[,1]-4)
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
str_sub(currencynames,1,.[,1]-4)
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
str_sub(currencynames,1,currencynames[,1]-4)
library(stringr)
colnames(exData1) -> cNames
currencyName <- cNames[-1]
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)} ->
currencyName
colnames(exData1)[-1]<-currencyName
exData1
library(stringr)
colnames(exData1) -> cNames
cNames
currencyName <- cNames[-1]
currencyName
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)} ->
currencyName
currencyName
colnames(exData1)[-1]<-currencyName
exData1
cNames
currencyName
library(stringr)
colnames(exData1) -> cNames
cNames
currencyName <- cNames[-1]
currencyName
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)} ->
currencyName
currencyName
colnames(exData1)[-1]<-currencyName
exData1
library(dplyr)
library(tidyselect)
exData %>%
mutate_at(vars(contains("USD/")),
funs(1/.)) -> exData1
exData1
#reverse <- function(x){
#y <- 1/x
#return(y)
#}
#mutate_at(exData,c(4,10,15),reverse) -> exData
#exData
library(stringr)
colnames(exData1) -> cNames
cNames
currencyName <- cNames[-1]
currencyName
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)} ->
currencyName
currencyName
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)}
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)}->
currencyName
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)}->
currencyName
currencyName
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)}-> currencyName
currencyName
library(stringr)
colnames(exData1) -> cNames
cNames
currencyName <- cNames[-1]
currencyName
??str_sub
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)}-> currencyName
currencyName
