colnames(exData[c(4,10,15)]) <- c(b)
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- c(b)
exData
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- c("英鎊","澳幣","歐元")
exData
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- c("英鎊","澳幣","歐元")
colnames(exData[c(4,10,15)])
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(c(4,10,15)) <- c("英鎊","澳幣","歐元")
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData) <- c("英鎊","澳幣","歐元")
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[4,10,15]) <- c("英鎊","澳幣","歐元")
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[,(4,10,15)]) <- c("英鎊","澳幣","歐元")
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- c("英鎊","澳幣","歐元")
library(readr)
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
library(dplyr)
mutate_at(exData,c(2:19),as.numeric) -> exData
exData
library(dplyr)
library(tidyselect)
reverse <- function(x){
y <- 1/x
return(y)
}
mutate_at(exData,c(4,10,15),reverse) -> exData
exData
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- c("英鎊","澳幣","歐元")
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- a
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- b
rename()
?rename
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
names(colnames(exData[c(4,10,15)])) -> b
colnames(exData[c(4,10,15)]) <- b
?names
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
#names(colnames(exData[c(4,10,15)]))
#colnames(exData[c(4,10,15)]) <- b
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
names(colnames(exData[c(4,10,15)])) <- b
#colnames(exData[c(4,10,15)]) <- b
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
names(colnames(exData[c(4,10,15)])) <- b
colnames(exData[c(4,10,15)])
library(readr)
gsHW2ws <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/gsHW2ws.csv")
sum((gsHW2ws$ans1 == 1), na.rm=TRUE)
mean((gsHW2ws$ans1 == 1), na.rm=TRUE) -> rate
rate
gsHW2ws[,c(1:6)] -> aa
stringr::str_which(colnames(aa),"ans")
library(dplyr)
gsHW2ws %>%
select(ans1,ans21,ans22,ans23,ans24) -> gsHW2wsans
colMeans(gsHW2wsans, na.rm = TRUE) -> rate01
rate01
gsHW2ws$答對率 <- rowMeans(gsHW2wsans, na.rm=FALSE)
library(dplyr)
gsHW2ws %>%
mutate(答對率 = as.numeric(答對率),
成績 = 5 + 答對率*5,
) -> gsHW2ws
which(gsHW2ws$答對率 == "0.8")
gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
ans[,c(1,2,3,4,5)] -> ans
colSums(ans)-> ques
which(ques == "9")
which(gsHW2ws$答對率 == "0.6")
gsHW2ws[c(23,24,25,26,27,28),] -> ans2
ans[,c(1,2,3,4,5)] -> ans2
colMeans(ans2) -> ques1
which(ques1 < "0.5")
library(readr)
allBankData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/allBankData.csv")
library(lubridate)
library(stringr)
allBankData$年月 <- as.factor(allBankData$年月)
allBankData$年月 <- str_c("0",allBankData$年月,"/01")
ymd(allBankData$年月) + years(1911) -> allBankData$年月
as.factor(allBankData$銀行)->allBankData$銀行
as.numeric(allBankData$`定存利率-三個月-固定`) -> allBankData$`定存利率-三個月-固定`
as.numeric(allBankData$`定存利率-一年期-固定`) -> allBankData$`定存利率-一年期-固定`
library(readr)
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
library(dplyr)
mutate_at(exData,c(2:19),as.numeric) -> exData
exData
library(dplyr)
library(tidyselect)
reverse <- function(x){
y <- 1/x
return(y)
}
mutate_at(exData,c(4,10,15),reverse) -> exData
exData
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
names(colnames(exData[c(4,10,15)])) <- b
colnames(exData[c(4,10,15)])
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- b
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData[c(4,10,15)]) <- b
colnames(exData[c(4,10,15)])
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData)[c(4,10,15)]) <- b
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData)[c(4,10,15)] <- b
exData
library(readr)
gsHW2ws <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/gsHW2ws.csv")
sum((gsHW2ws$ans1 == 1), na.rm=TRUE)
mean((gsHW2ws$ans1 == 1), na.rm=TRUE) -> rate
rate
gsHW2ws[,c(1:6)] -> aa
stringr::str_which(colnames(aa),"ans")
library(dplyr)
gsHW2ws %>%
select(ans1,ans21,ans22,ans23,ans24) -> gsHW2wsans
colMeans(gsHW2wsans, na.rm = TRUE) -> rate01
rate01
gsHW2ws$答對率 <- rowMeans(gsHW2wsans, na.rm=FALSE)
library(dplyr)
gsHW2ws %>%
mutate(答對率 = as.numeric(答對率),
成績 = 5 + 答對率*5,
) -> gsHW2ws
which(gsHW2ws$答對率 == "0.8")
gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
ans[,c(1,2,3,4,5)] -> ans
colSums(ans)-> ques
which(ques == "9")
which(gsHW2ws$答對率 == "0.6")
gsHW2ws[c(23,24,25,26,27,28),] -> ans2
ans[,c(1,2,3,4,5)] -> ans2
colMeans(ans2) -> ques1
which(ques1 < "0.5")
library(readr)
allBankData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/allBankData.csv")
library(lubridate)
library(stringr)
allBankData$年月 <- as.factor(allBankData$年月)
allBankData$年月 <- str_c("0",allBankData$年月,"/01")
ymd(allBankData$年月) + years(1911) -> allBankData$年月
as.factor(allBankData$銀行)->allBankData$銀行
as.numeric(allBankData$`定存利率-三個月-固定`) -> allBankData$`定存利率-三個月-固定`
as.numeric(allBankData$`定存利率-一年期-固定`) -> allBankData$`定存利率-一年期-固定`
library(readr)
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
library(dplyr)
mutate_at(exData,c(2:19),as.numeric) -> exData
exData
library(dplyr)
library(tidyselect)
reverse <- function(x){
y <- 1/x
return(y)
}
mutate_at(exData,c(4,10,15),reverse) -> exData
exData
library(stringr)
colnames(exData[c(4,10,15)]) -> a
str_locate_all(a,"/")
str_sub(a,1,2) -> b
colnames(exData)[c(4,10,15)] <- b
exData
#gsHW2ws[,c(1:6)] -> aa
library(stringr)
str_which(names(gsHW2ws),"ans")
?names
library(dplyr)
#gsHW2ws %>%
#select(ans1,ans21,ans22,ans23,ans24) -> gsHW2wsans
colMeans(gsHW2ws[,ansnames], na.rm = TRUE) -> rate01
#gsHW2ws[,c(1:6)] -> aa
library(stringr)
ansnames <- str_which(names(gsHW2ws),"ans")
library(dplyr)
#gsHW2ws %>%
#select(ans1,ans21,ans22,ans23,ans24) -> gsHW2wsans
colMeans(gsHW2ws[,ansnames], na.rm = TRUE) -> rate01
rate01
gsHW2ws$答對率 <- rowMeans(gsHW2ws[,ansnames], na.rm=FALSE)
gsHW2ws$答對率 <- rowMeans(gsHW2ws[,ansnames], na.rm=FALSE)
gsHW2ws$答對率
library(dplyr)
#gsHW2ws %>%
#mutate(答對率 = as.numeric(答對率),
#成績 = 5 + 答對率*5,
#) -> gsHW2ws
gsHW2ws$成績 <- 5+gsHW2ws$答對率*5
library(readr)
gsHW2ws <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/gsHW2ws.csv")
#sum((gsHW2ws$ans1 == 1), na.rm=TRUE)
mean((gsHW2ws$ans1 == 1), na.rm=TRUE) -> rate
rate
#gsHW2ws[,c(1:6)] -> aa
library(stringr)
ansnames <- str_which(names(gsHW2ws),"ans")
library(dplyr)
#gsHW2ws %>%
#select(ans1,ans21,ans22,ans23,ans24) -> gsHW2wsans
colMeans(gsHW2ws[,ansnames], na.rm = TRUE) -> rate01
rate01
library(readr)
gsHW2ws <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/gsHW2ws.csv")
#sum((gsHW2ws$ans1 == 1), na.rm=TRUE)
mean((gsHW2ws$ans1 == 1), na.rm=TRUE) -> rate
rate
#gsHW2ws[,c(1:6)] -> aa
library(stringr)
ansnames <- str_which(names(gsHW2ws),"ans")
library(dplyr)
#gsHW2ws %>%
#select(ans1,ans21,ans22,ans23,ans24) -> gsHW2wsans
colMeans(gsHW2ws[,ansnames], na.rm = TRUE) -> rate01
rate01
gsHW2ws$答對率 <- rowMeans(gsHW2ws[,ansnames], na.rm=FALSE)
View(gsHW2ws)
library(dplyr)
#gsHW2ws %>%
#mutate(答對率 = as.numeric(答對率),
#成績 = 5 + 答對率*5,
#) -> gsHW2ws
gsHW2ws$成績 <- 5+gsHW2ws$答對率*5
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansNames],na.rm = TRUE)
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansNames]
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
sample4corrects
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
colMeans(sample4corrects,na.rm = TRUE)->aa
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
colMeans(sample4corrects,na.rm = TRUE)->aa
aa
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
colMeans(sample4corrects,na.rm = TRUE)->aa #算平均錯誤率
minLocation <- which(aa == min(aa))
min1<-names(aa)[minLocation]
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
colMeans(sample4corrects,na.rm = TRUE)->aa #算每題平均正確率
minLocation <- which(aa == min(aa))
min1<-names(aa)[minLocation]
aa<-aa[-minLocation] # - 號 排除最低正確率
minLocation <- which(aa == min(aa)) #找出第二低
min2<-names(aa)[minLocation]
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
colMeans(sample4corrects,na.rm = TRUE)->aa #算每題平均正確率
minLocation <- which(aa == min(aa))
min1<-names(aa)[minLocation]
aa<-aa[-minLocation] # - 號 排除最低正確率
minLocation <- which(aa == min(aa)) #找出第二低
min2<-names(aa)[minLocation]
commonMistakes<-c(min1, min2)
commonMistakes
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
gsHW2ws$答對題數 <- rowSums(gsHW2ws[,ansnames],na.rm = TRUE)
sample4corrects<- gsHW2ws[(gsHW2ws$答對題數==4),ansnames]
colMeans(sample4corrects,na.rm = TRUE)->aa #算每題平均正確率
minLocation <- which(aa == min(aa))
min1<-names(aa)[minLocation]
aa<-aa[-minLocation] # - 號 排除最低正確率
minLocation <- which(aa == min(aa)) #找出第二低
min2<-names(aa)[minLocation]
commonMistakes<-c(min1, min2)
commonMistakes
#which(gsHW2ws$答對率 == "0.8")
#gsHW2ws[c(29,30,31,32,33,34,35,36,37),] -> ans
#ans[,c(1,2,3,4,5)] -> ans
#colSums(ans)-> ques
#which(ques == "9")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
colMeans(sample3correct,na.rm = TRUE) -> bb
lowcorrect <- which(bb < 0.5)
sample3correct[ansnames,lowcorrect]
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
colMeans(sample3correct,na.rm = TRUE) -> bb
lowcorrect <- which(bb < 0.5)
sample3correct[names(ansnames),lowcorrect]
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
colMeans(sample3correct,na.rm = TRUE) -> bb
lowcorrect <- which(bb < 0.5)
sample3correct[names(sample3correct),lowcorrect]
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
colMeans(sample3correct,na.rm = TRUE) -> bb
lowcorrect <- which(bb < 0.5)
sample3correct[lowcorrect,ansnames]
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
colMeans(sample3correct,na.rm = TRUE) -> bb
lowcorrect <- which(bb < 0.5)
names(bb[lowcorrect])
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
library(readr)
allBankData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/allBankData.csv")
sample3correct <- gsHW2ws[(gsHW2ws$答對題數==3),ansnames]
colMeans(sample3correct,na.rm = TRUE) -> bb
lowcorrect <- which(bb < 0.5)
names(bb)[lowcorrect]
#which(gsHW2ws$答對率 == "0.6")
#gsHW2ws[c(23,24,25,26,27,28),] -> ans2
#ans[,c(1,2,3,4,5)] -> ans2
#colMeans(ans2) -> ques1
#which(ques1 < "0.5")
as.factor(allBankData$銀行)->allBankData$銀行
as.numeric(allBankData$`定存利率-三個月-固定`) -> allBankData$`定存利率-三個月-固定`
as.numeric(allBankData$`定存利率-一年期-固定`) -> allBankData$`定存利率-一年期-固定`
library(lubridate)
library(stringr)
allBankData$年月 <- as.factor(allBankData$年月)
allBankData$年月 <- str_c("0",allBankData$年月,"/01")
ymd(allBankData$年月) + years(1911) -> allBankData$年月
library(readr)
exData <- read_csv("https://quality.data.gov.tw/dq_download_csv.php?nid=6563&md5_url=9f65bdb6752389dc713acc27e93c1c38")
View(exData)
library(dplyr)
exData %>%
mutate_at(
vars(contains("/")
),
funs(parse_number(.,na=c("","NA","-"))))%>%
mutate(期間 = str_c(期間,"-01"),期間=ymd(期間)) -> exData
#mutate_at(exData,c(2:19),as.numeric) -> exData
#exData
library(dplyr)
library(tidyselect)
exData %>%
mutate_at(vars(contains("USD/")),
funs(1/.)) -> exData1
#reverse <- function(x){
#y <- 1/x
#return(y)
#}
#mutate_at(exData,c(4,10,15),reverse) -> exData
#exData
library(dplyr)
library(tidyselect)
exData %>%
mutate_at(vars(contains("USD/")),
funs(1/.)) -> exData1
exData1
#reverse <- function(x){
#y <- 1/x
#return(y)
#}
#mutate_at(exData,c(4,10,15),reverse) -> exData
#exData
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
currencyName %>% str_locate("/") %>%
{str_sub(currencyName,1,.[,1]-4)} ->
currencyName
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
currencynames %>% str_locate("/") %>%
{str_sub(currencynames,1,.[,1]-4)} ->
currencyName
#str_locate_all(a,"/")
#str_sub(a,1,2) -> b
#colnames(exData)[c(4,10,15)] <- b
#exData
>str_sub()
?str_sub
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
currencynames %>% str_locate("/") %>%
{str_sub(currencynames,1,.[,1]-4)} ->
currencyName
currencynames[,1]-4
library(stringr)
colnames(exData1) -> a
currencynames <- a[-1]
currencynames %>% str_locate("/") %>%
{str_sub(currencynames,1,.[,1]-4)} ->
currencyName
str_sub(currencynames,1,.[,1]-4)
